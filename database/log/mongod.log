2015-08-16T19:58:57.931+0530 I CONTROL  Hotfix KB2731284 or later update is not installed, will zero-out data files
2015-08-16T19:58:57.946+0530 I CONTROL  Trying to start Windows service 'MongoDB'
2015-08-16T19:58:57.946+0530 I STORAGE  Service running
2015-08-16T19:58:57.962+0530 W -        [initandlisten] Detected unclean shutdown - C:\Ashish\implementation\enricher\database\data\mongod.lock is not empty.
2015-08-16T19:58:58.012+0530 I JOURNAL  [initandlisten] journal dir=C:\Ashish\implementation\enricher\database\data\journal
2015-08-16T19:58:58.013+0530 D COMMAND  [DataFileSync] BackgroundJob starting: DataFileSync
2015-08-16T19:58:58.017+0530 I JOURNAL  [initandlisten] recover begin
2015-08-16T19:58:58.022+0530 I JOURNAL  [initandlisten] recover lsn: 0
2015-08-16T19:58:58.023+0530 I JOURNAL  [initandlisten] recover C:\Ashish\implementation\enricher\database\data\journal\j._0
2015-08-16T19:58:58.042+0530 I JOURNAL  [initandlisten] recover cleaning up
2015-08-16T19:58:58.042+0530 I JOURNAL  [initandlisten] removeJournalFiles
2015-08-16T19:58:58.043+0530 D JOURNAL  [initandlisten] removeJournalFiles end
2015-08-16T19:58:58.043+0530 I JOURNAL  [initandlisten] recover done
2015-08-16T19:58:58.058+0530 I JOURNAL  [durability] Durability thread started
2015-08-16T19:58:58.059+0530 I JOURNAL  [journal writer] Journal writer thread started
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] MongoDB starting : pid=3496 port=27017 dbpath=C:\Ashish\implementation\enricher\database\data 64-bit host=WizDev021
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] targetMinOS: Windows 7/Windows Server 2008 R2
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] db version v3.0.3
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] git version: b40106b36eecd1b4407eb1ad1af6bc60593c6105
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1m-fips 19 Mar 2015
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] build info: windows sys.getwindowsversion(major=6, minor=1, build=7601, platform=2, service_pack='Service Pack 1') BOOST_LIB_VERSION=1_49
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] allocator: system
2015-08-16T19:58:58.061+0530 I CONTROL  [initandlisten] options: { config: "C:\Ashish\implementation\enricher\database\mongod.config", net: { bindIp: "127.0.0.1" }, service: true, storage: { dbPath: "C:\Ashish\implementation\enricher\database\data" }, systemLog: { destination: "file", path: "C:\Ashish\implementation\enricher\database\log\mongod.log", verbosity: 1 } }
2015-08-16T19:58:58.062+0530 D STORAGE  [initandlisten] enter repairDatabases (to check pdfile version #)
2015-08-16T19:58:58.063+0530 D STORAGE  [initandlisten]     Recovering database: EnricherDB
2015-08-16T19:58:58.269+0530 D STORAGE  [initandlisten] EnricherDB.apps: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.269+0530 D STORAGE  [initandlisten] EnricherDB.system.namespaces: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.269+0530 D STORAGE  [initandlisten] EnricherDB.test: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.269+0530 D STORAGE  [initandlisten] EnricherDB.system.indexes: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.271+0530 D STORAGE  [initandlisten]     Recovering database: local
2015-08-16T19:58:58.404+0530 D STORAGE  [initandlisten] local.startup_log: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.404+0530 D STORAGE  [initandlisten] local.system.indexes: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.404+0530 D STORAGE  [initandlisten] local.system.namespaces: clearing plan cache - collection info cache reset
2015-08-16T19:58:58.405+0530 D STORAGE  [initandlisten] done repairDatabases
2015-08-16T19:58:58.408+0530 I QUERY    [initandlisten] query admin.system.roles planSummary: EOF ntoreturn:0 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 1ms
2015-08-16T19:58:58.409+0530 D INDEX    [initandlisten] checking complete
2015-08-16T19:58:58.410+0530 D COMMAND  [TTLMonitor] BackgroundJob starting: TTLMonitor
2015-08-16T19:58:58.410+0530 D COMMAND  [PeriodicTaskRunner] BackgroundJob starting: PeriodicTaskRunner
2015-08-16T19:58:58.410+0530 D COMMAND  [ClientCursorMonitor] BackgroundJob starting: ClientCursorMonitor
2015-08-16T19:58:58.412+0530 I NETWORK  [initandlisten] waiting for connections on port 27017
2015-08-16T19:58:58.508+0530 D JOURNAL  [journal writer] lsn set 0
2015-08-16T19:59:58.025+0530 I STORAGE  [DataFileSync] flushing mmaps took 11ms  for 4 files
2015-08-16T20:00:58.019+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:01:58.018+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:02:58.022+0530 I STORAGE  [DataFileSync] flushing mmaps took 7ms  for 4 files
2015-08-16T20:03:58.021+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:04:58.020+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:05:58.021+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:06:58.022+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:07:58.023+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:08:58.019+0530 I STORAGE  [DataFileSync] flushing mmaps took 1ms  for 4 files
2015-08-16T20:09:58.023+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:10:58.020+0530 I STORAGE  [DataFileSync] flushing mmaps took 1ms  for 4 files
2015-08-16T20:11:58.030+0530 I STORAGE  [DataFileSync] flushing mmaps took 10ms  for 4 files
2015-08-16T20:12:58.030+0530 I STORAGE  [DataFileSync] flushing mmaps took 10ms  for 4 files
2015-08-16T20:13:58.024+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:14:58.028+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:15:58.219+0530 I STORAGE  [DataFileSync] flushing mmaps took 99ms  for 4 files
2015-08-16T20:16:50.043+0530 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49536 #1 (1 connection now open)
2015-08-16T20:16:50.068+0530 I COMMAND  [conn1] command system.$cmd command: isMaster { ismaster: true } keyUpdates:0 writeConflicts:0 numYields:0 reslen:178 locks:{} 0ms
2015-08-16T20:16:50.074+0530 I NETWORK  [conn1] end connection 127.0.0.1:49536 (0 connections now open)
2015-08-16T20:16:50.092+0530 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49537 #2 (1 connection now open)
2015-08-16T20:16:50.092+0530 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49538 #3 (2 connections now open)
2015-08-16T20:16:50.093+0530 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49539 #4 (3 connections now open)
2015-08-16T20:16:50.094+0530 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49540 #5 (4 connections now open)
2015-08-16T20:16:50.095+0530 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49541 #6 (5 connections now open)
2015-08-16T20:16:50.097+0530 I COMMAND  [conn2] command system.$cmd command: isMaster { ismaster: true } keyUpdates:0 writeConflicts:0 numYields:0 reslen:178 locks:{} 0ms
2015-08-16T20:16:50.116+0530 I COMMAND  [conn3] command enricherDB.$cmd command: listIndexes { listIndexes: "apps", cursor: {} } keyUpdates:0 writeConflicts:0 numYields:0 reslen:71 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:16:50.119+0530 I COMMAND  [conn4] command enricherDB.$cmd command: listIndexes { listIndexes: "childitems", cursor: {} } keyUpdates:0 writeConflicts:0 numYields:0 reslen:71 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:16:50.123+0530 I COMMAND  [conn5] command enricherDB.$cmd command: listIndexes { listIndexes: "inits", cursor: {} } keyUpdates:0 writeConflicts:0 numYields:0 reslen:71 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:16:50.126+0530 D -        [conn6] User Assertion: 13297:db already exists with different case already have: [EnricherDB] trying to create [enricherDB]
2015-08-16T20:16:50.126+0530 I COMMAND  [conn6] command enricherDB.$cmd command: createIndexes { createIndexes: "apps", indexes: [ { name: "host_1", key: { host: 1 }, unique: true, background: true, safe: null } ], writeConcern: { w: 1 } } keyUpdates:0 writeConflicts:0 numYields:0 reslen:165 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:50.126+0530 D -        [conn2] User Assertion: 13297:db already exists with different case already have: [EnricherDB] trying to create [enricherDB]
2015-08-16T20:16:50.126+0530 I COMMAND  [conn2] command enricherDB.$cmd command: createIndexes { createIndexes: "childitems", indexes: [ { name: "key_1", key: { key: 1 }, unique: true, background: true, safe: null } ], writeConcern: { w: 1 } } keyUpdates:0 writeConflicts:0 numYields:0 reslen:165 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:50.127+0530 D -        [conn3] User Assertion: 13297:db already exists with different case already have: [EnricherDB] trying to create [enricherDB]
2015-08-16T20:16:50.127+0530 I COMMAND  [conn3] command enricherDB.$cmd command: createIndexes { createIndexes: "inits", indexes: [ { name: "menu.key_1", key: { menu.key: 1 }, unique: true, background: true, safe: null } ], writeConcern: { w: 1 } } keyUpdates:0 writeConflicts:0 numYields:0 reslen:165 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:50.128+0530 D -        [conn4] User Assertion: 13297:db already exists with different case already have: [EnricherDB] trying to create [enricherDB]
2015-08-16T20:16:50.128+0530 I WRITE    [conn4] insert enricherDB.system.indexes query: { ns: "enricherDB.apps", key: { host: 1 }, name: "host_1", unique: true, background: true, safe: null } ninserted:0 keyUpdates:0 writeConflicts:0 exception: db already exists with different case already have: [EnricherDB] trying to create [enricherDB] code:13297 numYields:0 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:50.128+0530 I COMMAND  [conn4] command enricherDB.$cmd command: insert { insert: "system.indexes", documents: [ { ns: "enricherDB.apps", key: { host: 1 }, name: "host_1", unique: true, background: true, safe: null } ], ordered: true, writeConcern: { w: 1 } } keyUpdates:0 writeConflicts:0 numYields:0 reslen:194 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:50.130+0530 D -        [conn5] User Assertion: 13297:db already exists with different case already have: [EnricherDB] trying to create [enricherDB]
2015-08-16T20:16:50.130+0530 I WRITE    [conn5] insert enricherDB.system.indexes query: { ns: "enricherDB.childitems", key: { key: 1 }, name: "key_1", unique: true, background: true, safe: null } ninserted:0 keyUpdates:0 writeConflicts:0 exception: db already exists with different case already have: [EnricherDB] trying to create [enricherDB] code:13297 numYields:0 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:50.130+0530 I COMMAND  [conn5] command enricherDB.$cmd command: insert { insert: "system.indexes", documents: [ { ns: "enricherDB.childitems", key: { key: 1 }, name: "key_1", unique: true, background: true, safe: null } ], ordered: true, writeConcern: { w: 1 } } keyUpdates:0 writeConflicts:0 numYields:0 reslen:194 locks:{ Global: { acquireCount: { w: 1 } }, MMAPV1Journal: { acquireCount: { w: 1 } }, Database: { acquireCount: { W: 1 } } } 0ms
2015-08-16T20:16:58.131+0530 I STORAGE  [DataFileSync] flushing mmaps took 9ms  for 4 files
2015-08-16T20:17:12.351+0530 I QUERY    [conn2] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:17:58.127+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:18:58.128+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:19:58.128+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:20:58.130+0530 I STORAGE  [DataFileSync] flushing mmaps took 7ms  for 4 files
2015-08-16T20:21:58.128+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:22:58.129+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:23:58.132+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:24:58.131+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:25:58.133+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:26:21.271+0530 I QUERY    [conn3] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:26:58.132+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:27:58.138+0530 I STORAGE  [DataFileSync] flushing mmaps took 10ms  for 4 files
2015-08-16T20:28:36.572+0530 I QUERY    [conn4] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:28:58.136+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:29:58.136+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:30:58.140+0530 I STORAGE  [DataFileSync] flushing mmaps took 8ms  for 4 files
2015-08-16T20:31:58.136+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:32:57.344+0530 I QUERY    [conn5] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:32:58.141+0530 I STORAGE  [DataFileSync] flushing mmaps took 8ms  for 4 files
2015-08-16T20:33:58.139+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:34:58.141+0530 I STORAGE  [DataFileSync] flushing mmaps took 8ms  for 4 files
2015-08-16T20:35:48.038+0530 I QUERY    [conn6] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:35:58.140+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:36:58.139+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:37:58.144+0530 I STORAGE  [DataFileSync] flushing mmaps took 7ms  for 4 files
2015-08-16T20:38:58.151+0530 I STORAGE  [DataFileSync] flushing mmaps took 13ms  for 4 files
2015-08-16T20:39:58.146+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:40:58.143+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:41:58.148+0530 I STORAGE  [DataFileSync] flushing mmaps took 8ms  for 4 files
2015-08-16T20:42:58.156+0530 I STORAGE  [DataFileSync] flushing mmaps took 15ms  for 4 files
2015-08-16T20:42:59.635+0530 I QUERY    [conn2] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:43:58.146+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:44:58.148+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:45:58.150+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-16T20:46:58.152+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:47:58.149+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:48:27.292+0530 I QUERY    [conn3] query enricherDB.inits planSummary: EOF ntoreturn:1000 ntoskip:0 nscanned:0 nscannedObjects:0 keyUpdates:0 writeConflicts:0 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 1 } }, MMAPV1Journal: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { R: 1 } } } 0ms
2015-08-16T20:48:58.152+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-16T20:49:58.150+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:50:58.151+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:51:58.153+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-16T20:52:58.154+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-16T20:53:58.438+0530 I STORAGE  [DataFileSync] flushing mmaps took 280ms  for 4 files
2015-08-16T21:09:11.945+0530 I STORAGE  [DataFileSync] flushing mmaps took 2314ms  for 4 files
2015-08-16T21:24:44.367+0530 I STORAGE  [DataFileSync] flushing mmaps took 1740ms  for 4 files
2015-08-16T21:40:09.269+0530 I STORAGE  [DataFileSync] flushing mmaps took 1723ms  for 4 files
2015-08-16T21:55:41.359+0530 I STORAGE  [DataFileSync] flushing mmaps took 1763ms  for 4 files
2015-08-16T22:11:14.807+0530 I STORAGE  [DataFileSync] flushing mmaps took 2226ms  for 4 files
2015-08-16T22:57:13.529+0530 I STORAGE  [DataFileSync] flushing mmaps took 994ms  for 4 files
2015-08-16T22:58:12.540+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-17T00:08:23.324+0530 I STORAGE  [DataFileSync] flushing mmaps took 1793ms  for 4 files
2015-08-17T00:09:21.536+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-17T00:10:21.536+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-17T00:11:21.538+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:12:21.538+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:13:21.540+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-17T00:14:21.541+0530 I STORAGE  [DataFileSync] flushing mmaps took 5ms  for 4 files
2015-08-17T00:15:21.543+0530 I STORAGE  [DataFileSync] flushing mmaps took 6ms  for 4 files
2015-08-17T00:16:21.541+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:17:21.547+0530 I STORAGE  [DataFileSync] flushing mmaps took 9ms  for 4 files
2015-08-17T00:18:21.543+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:19:21.542+0530 I STORAGE  [DataFileSync] flushing mmaps took 3ms  for 4 files
2015-08-17T00:20:21.544+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:21:21.544+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:22:21.545+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:23:21.548+0530 I STORAGE  [DataFileSync] flushing mmaps took 7ms  for 4 files
2015-08-17T00:24:21.551+0530 I STORAGE  [DataFileSync] flushing mmaps took 10ms  for 4 files
2015-08-17T00:25:21.546+0530 I STORAGE  [DataFileSync] flushing mmaps took 4ms  for 4 files
2015-08-17T00:26:21.545+0530 I STORAGE  [DataFileSync] flushing mmaps took 2ms  for 4 files
2015-08-17T00:27:21.546+0530 I STORAGE  [DataFileSync] flushing mmaps took 2ms  for 4 files
